package GUI;

import Database.*;
import java.awt.Color;
import static java.awt.Color.*;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import main.Customer;

import com.formdev.flatlaf.*;
import java.util.ResourceBundle;
import javax.swing.UnsupportedLookAndFeelException;
import kdesp73.themeLib.Theme;

/**
 *
 * @author tgeorg
 */
public class OpenAccountFrame extends javax.swing.JFrame {

    ServicesFrame sf;
    ArrayList<Customer> customerList;
    ResourceBundle rb;
    Theme theme = null;

    private int indexOfCustomerLoggedIn;

    Color pc = new Color(162, 119, 255);
    Color bg = new Color(21, 20, 27);
    Color def = new Color(187, 187, 187);

    /**
     * Creates new form OpenAccountFrame
     */
    public OpenAccountFrame() {
        FlatDarculaLaf.setup();
        // Frame setup
        initComponents();
        this.theme = GUIFunctions.setupFrame(this, "Change your password");

    }

    public OpenAccountFrame(ServicesFrame sf, ArrayList<Customer> customerList, int indexOfCustomerLoggedIn) {
        FlatDarculaLaf.setup();
        // Frame setup
        initComponents();
        this.theme = GUIFunctions.setupFrame(this, "Change your password");

        this.sf = sf;
        this.customerList = customerList;
        this.indexOfCustomerLoggedIn = indexOfCustomerLoggedIn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        usernameIndicator = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        newPasswordIndicator = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        cancelBtn = new javax.swing.JButton();
        applyBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setName("bg"); // NOI18N

        usernameIndicator.setText("<html><p style=\"text-align:center\"><b>Username:</p> </html>");
        usernameIndicator.setName("textbox"); // NOI18N

        newPasswordIndicator.setText("<html><p style=\"text-align:center\"><b>Password:</p> </html>");
        newPasswordIndicator.setName("textbox"); // NOI18N

        newPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPasswordFieldKeyReleased(evt);
            }
        });

        cancelBtn.setBackground(java.awt.Color.darkGray);
        cancelBtn.setText("<html><p style=\"text-align:center\"><b>Cancel</p> </html>");
        cancelBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelBtn.setName("btn"); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        applyBtn.setBackground(java.awt.Color.darkGray);
        applyBtn.setText("<html><p style=\"text-align:center\"><b>Apply</p> </html>");
        applyBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        applyBtn.setName("btn"); // NOI18N
        applyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPasswordIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 119, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void applyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyBtnActionPerformed
        if (newPasswordField.getForeground() == green) {
            customerList.get(indexOfCustomerLoggedIn).getAcc().setPassword(GUIUtils.charArrayToString(newPasswordField.getPassword()));

            try {
                DBMethods.updateCustomerAcc(customerList, indexOfCustomerLoggedIn);
            } catch (SQLException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.dispose();
            JOptionPane.showMessageDialog(sf, "Successfull change of your password");
        } else {
            JOptionPane.showMessageDialog(this, "Unsuccessfull change of your password", "Change Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_applyBtnActionPerformed

    private void newPasswordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordFieldKeyReleased
        JPopupMenu errorMessage = new JPopupMenu();
        errorMessage.setFocusable(false);

        JMenuItem emptyBlankPw = new JMenuItem("Your password must not be empty or blank");
        JMenuItem sizePw = new JMenuItem("Your password must be at least 5 at size");
        JMenuItem numPw = new JMenuItem("Your password must contain at least 1 number");
        JMenuItem charPw = new JMenuItem("Your password must contain at least 1 character");

        emptyBlankPw.setForeground(red);
        sizePw.setForeground(red);
        numPw.setForeground(red);
        charPw.setForeground(red);

        errorMessage.add(emptyBlankPw);
        errorMessage.add(sizePw);
        errorMessage.add(numPw);
        errorMessage.add(charPw);

        if (GUIUtils.charArrayToString(newPasswordField.getPassword()).isBlank() || GUIUtils.charArrayToString(newPasswordField.getPassword()).isEmpty()) {
            errorMessage.remove(sizePw);
            errorMessage.remove(numPw);
            errorMessage.remove(charPw);
            errorMessage.show(this, 25, 200);
            newPasswordField.requestFocus();
            newPasswordField.setForeground(red);
            return;
        }

        if (GUIUtils.checkIfAllNums(GUIUtils.charArrayToString(newPasswordField.getPassword()))) {
            if (newPasswordField.getPassword().length < 5) {
                errorMessage.remove(emptyBlankPw);
                errorMessage.remove(numPw);
                errorMessage.show(this, 25, 200);
                newPasswordField.requestFocus();
                newPasswordField.setForeground(red);
                return;
            }
            errorMessage.remove(emptyBlankPw);
            errorMessage.remove(sizePw);
            errorMessage.remove(numPw);
            errorMessage.show(this, 25, 200);
            newPasswordField.requestFocus();
            newPasswordField.setForeground(red);
            return;
        }

        if (!GUIUtils.checkNums(GUIUtils.charArrayToString(newPasswordField.getPassword()))) {
            if (newPasswordField.getPassword().length < 5) {
                errorMessage.remove(emptyBlankPw);
                errorMessage.remove(charPw);
                errorMessage.show(this, 25, 200);
                newPasswordField.requestFocus();
                newPasswordField.setForeground(red);
                return;
            }
            errorMessage.remove(emptyBlankPw);
            errorMessage.remove(sizePw);
            errorMessage.remove(charPw);
            errorMessage.show(this, 25, 200);
            newPasswordField.requestFocus();
            newPasswordField.setForeground(red);
            return;
        }

        if (newPasswordField.getPassword().length < 5) {
            errorMessage.remove(emptyBlankPw);
            errorMessage.remove(numPw);
            errorMessage.remove(charPw);
            errorMessage.show(this, 25, 200);
            newPasswordField.requestFocus();
            newPasswordField.setForeground(red);
            return;
        }

        if (GUIUtils.charArrayToString(newPasswordField.getPassword()).equals(customerList.get(indexOfCustomerLoggedIn).getAcc().getPassword())) {
            errorMessage.remove(emptyBlankPw);
            errorMessage.remove(sizePw);
            errorMessage.remove(numPw);
            errorMessage.remove(charPw);
            errorMessage.show(this, 25, 200);
            newPasswordField.requestFocus();
            newPasswordField.setForeground(red);
            return;
        }

        newPasswordField.setForeground(green);

        errorMessage.remove(emptyBlankPw);
        errorMessage.remove(sizePw);
        errorMessage.remove(numPw);
        errorMessage.remove(charPw);
        errorMessage.show(this, 25, 200);
        newPasswordField.requestFocus();
    }//GEN-LAST:event_newPasswordFieldKeyReleased

    /**
     * @param args the command line arguments
     * @throws java.lang.ClassNotFoundException
     * @throws java.lang.InstantiationException
     * @throws java.lang.IllegalAccessException
     * @throws javax.swing.UnsupportedLookAndFeelException
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenAccountFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JLabel newPasswordIndicator;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameIndicator;
    // End of variables declaration//GEN-END:variables
}
